from matplotlib import pyplot as plt
import numpy as np
import networkx as nx

def draw_routes(routes):
    edges = {}
    for route in routes:
        last = None
        for stop in route.stops.values():
            if last is not None:
                edges[(last.address_id, stop.address_id)] = route.plot_color
            last = stop

    D = np.array([
    [ 0, 72, 38, 110, 22, 35, 109, 86, 76, 28, 64, 32, 76, 52, 44, 37, 76, 20, 36, 65, 19, 34, 24, 64, 24, 50, 36, ],
    [ 72, 0, 71, 64, 60, 48, 16, 28, 48, 63, 73, 53, 48, 30, 46, 45, 74, 60, 50, 48, 95, 109, 83, 69, 100, 44, 130, ],
    [ 38, 71, 0, 92, 44, 28, 86, 63, 53, 16, 104, 30, 53, 65, 56, 58, 57, 41, 36, 43, 33, 50, 61, 97, 61, 28, 74, ],
    [ 110, 64, 92, 0, 56, 69, 86, 40, 111, 73, 10, 64, 111, 39, 43, 44, 72, 53, 60, 106, 59, 74, 47, 6, 64, 101, 101, ],
    [ 22, 60, 44, 56, 0, 19, 79, 51, 75, 26, 65, 15, 75, 32, 24, 27, 14, 5, 17, 65, 32, 52, 25, 60, 42, 54, 55, ],
    [ 35, 48, 28, 69, 19, 0, 63, 43, 45, 15, 87, 8, 45, 39, 30, 38, 57, 19, 11, 35, 49, 69, 42, 90, 59, 35, 72, ],
    [ 109, 16, 86, 86, 79, 63, 0, 40, 42, 80, 86, 69, 42, 42, 80, 58, 72, 77, 66, 32, 112, 127, 100, 82, 117, 51, 142, ],
    [ 86, 28, 63, 40, 51, 43, 40, 0, 77, 93, 46, 48, 77, 16, 33, 34, 31, 51, 46, 67, 81, 104, 78, 42, 95, 62, 107, ],
    [ 76, 48, 53, 111, 75, 45, 42, 77, 0, 48, 119, 47, 6, 76, 78, 66, 72, 59, 54, 10, 85, 103, 78, 115, 95, 28, 141, ],
    [ 28, 63, 16, 73, 26, 15, 80, 93, 48, 0, 94, 11, 51, 46, 37, 40, 67, 23, 18, 41, 38, 58, 43, 78, 48, 32, 60, ],
    [ 64, 73, 104, 10, 65, 87, 86, 46, 119, 94, 0, 73, 120, 49, 52, 54, 81, 62, 69, 115, 69, 83, 41, 4, 49, 110, 68, ],
    [ 32, 53, 30, 64, 15, 8, 69, 48, 47, 11, 73, 0, 47, 35, 26, 29, 63, 12, 10, 37, 41, 62, 34, 69, 52, 37, 64, ],
    [ 76, 48, 53, 111, 75, 45, 42, 77, 6, 51, 120, 47, 0, 73, 78, 66, 72, 59, 54, 10, 85, 103, 78, 115, 95, 28, 141, ],
    [ 52, 30, 65, 39, 32, 39, 42, 16, 76, 46, 49, 35, 73, 0, 13, 15, 40, 32, 30, 69, 62, 82, 55, 44, 72, 64, 105, ],
    [ 44, 46, 56, 43, 24, 30, 80, 33, 78, 37, 52, 26, 78, 13, 0, 6, 64, 24, 22, 68, 53, 74, 46, 48, 63, 65, 88, ],
    [ 37, 45, 58, 44, 27, 38, 58, 34, 66, 40, 54, 29, 66, 15, 6, 0, 56, 16, 17, 64, 49, 69, 42, 56, 59, 57, 84, ],
    [ 76, 74, 57, 72, 14, 57, 72, 31, 72, 67, 81, 63, 72, 40, 64, 56, 0, 71, 61, 72, 106, 120, 94, 75, 111, 62, 136, ],
    [ 20, 60, 41, 53, 5, 19, 77, 51, 59, 23, 62, 12, 59, 32, 24, 16, 71, 0, 16, 49, 30, 50, 23, 55, 40, 51, 52, ],
    [ 36, 50, 36, 60, 17, 11, 66, 46, 54, 18, 69, 10, 54, 30, 22, 17, 61, 16, 0, 44, 46, 66, 39, 65, 56, 43, 69, ],
    [ 65, 48, 43, 106, 65, 35, 32, 67, 10, 41, 115, 37, 10, 69, 68, 64, 72, 49, 44, 0, 75, 93, 68, 114, 85, 18, 131, ],
    [ 19, 95, 33, 59, 32, 49, 112, 81, 85, 38, 69, 41, 85, 62, 53, 49, 106, 30, 46, 75, 0, 20, 29, 64, 28, 60, 41, ],
    [ 34, 109, 50, 74, 52, 69, 127, 104, 103, 58, 83, 62, 103, 82, 74, 69, 120, 50, 66, 93, 20, 0, 44, 79, 34, 79, 47, ],
    [ 24, 83, 61, 47, 25, 42, 100, 78, 78, 43, 41, 34, 78, 55, 46, 42, 94, 23, 39, 68, 29, 44, 0, 45, 17, 68, 31, ],
    [ 64, 69, 97, 6, 60, 90, 82, 42, 115, 78, 4, 69, 115, 44, 48, 56, 75, 55, 65, 114, 64, 79, 45, 0, 54, 106, 78, ],
    [ 24, 100, 61, 64, 42, 59, 117, 95, 95, 48, 49, 52, 95, 72, 63, 59, 111, 40, 56, 85, 28, 34, 17, 54, 0, 70, 13, ],
    [ 50, 44, 28, 101, 54, 35, 51, 62, 28, 32, 110, 37, 28, 64, 65, 57, 62, 51, 43, 18, 60, 79, 68, 106, 70, 0, 83, ],
    [ 36, 130, 74, 101, 55, 72, 142, 107, 141, 60, 68, 64, 141, 105, 88, 84, 136, 52, 69, 131, 41, 47, 31, 78, 13, 83, 0, ],
        ])

    G = nx.Graph()
    for n in range(len(D)):
        for m in range(len(D)):
            if n != m:
                if (n,m) in edges:
                    G.add_edge(n,m, weight=D[n][m], color = edges[(n,m)])
                elif (m,n) in edges:
                    G.add_edge(n,m, weight=D[n][m], color = edges[(m,n)])
                else:
                    G.add_edge(n,m, weight=D[n][m], color = '#FF000000')

    pos = nx.kamada_kawai_layout(G, weight='weight')
    colors = nx.get_edge_attributes(G,'color').values()

    nx.draw(G, pos, edge_color=colors)
    nx.draw_networkx_labels(G,pos,font_size=20,font_family='sans-serif')

    plt.show()